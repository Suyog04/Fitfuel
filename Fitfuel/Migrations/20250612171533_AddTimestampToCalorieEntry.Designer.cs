// <auto-generated />
using System;
using FitFuel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fitfuel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250612171533_AddTimestampToCalorieEntry")]
    partial class AddTimestampToCalorieEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FitFuel.Models.CalorieEntry", b =>
                {
                    b.Property<Guid>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Calories")
                        .HasColumnType("double precision");

                    b.Property<double>("Carbs")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Fats")
                        .HasColumnType("double precision");

                    b.Property<double>("Fiber")
                        .HasColumnType("double precision");

                    b.Property<string>("FoodItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Meal")
                        .HasColumnType("integer");

                    b.Property<double>("Protein")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<double>("WeightInGrams")
                        .HasColumnType("double precision");

                    b.HasKey("EntryId");

                    b.HasIndex("UserId");

                    b.ToTable("CalorieEntries");
                });

            modelBuilder.Entity("FitFuel.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitFuel.Models.CalorieEntry", b =>
                {
                    b.HasOne("FitFuel.Models.User", "User")
                        .WithMany("CalorieEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitFuel.Models.User", b =>
                {
                    b.Navigation("CalorieEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
